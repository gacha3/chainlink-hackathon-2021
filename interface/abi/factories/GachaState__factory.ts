/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GachaState, GachaStateInterface } from "../GachaState";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "chips",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "amount",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chipsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "segments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "segmentsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526064600255600a60035534801561001a57600080fd5b506101658061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631a39d8ef1461005c578063315606261461007857806340d960501461009857806341a830f814610104578063cb892c711461010d575b600080fd5b61006560065481565b6040519081526020015b60405180910390f35b610065610086366004610116565b60006020819052908152604090205481565b6100d86100a6366004610116565b6004602052600090815260409020546001600160a01b03811690600160a01b90046bffffffffffffffffffffffff1682565b604080516001600160a01b0390931683526bffffffffffffffffffffffff90911660208301520161006f565b61006560055481565b61006560015481565b60006020828403121561012857600080fd5b503591905056fea26469706673582212207ed9a70f93c75112c497be801f7d448cd0b4f9c5ea8e702f83959aec105166d964736f6c634300080a0033";

type GachaStateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GachaStateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GachaState__factory extends ContractFactory {
  constructor(...args: GachaStateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GachaState> {
    return super.deploy(overrides || {}) as Promise<GachaState>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GachaState {
    return super.attach(address) as GachaState;
  }
  connect(signer: Signer): GachaState__factory {
    return super.connect(signer) as GachaState__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GachaStateInterface {
    return new utils.Interface(_abi) as GachaStateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GachaState {
    return new Contract(address, _abi, signerOrProvider) as GachaState;
  }
}
