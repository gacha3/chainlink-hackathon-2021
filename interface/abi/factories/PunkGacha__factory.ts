/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PunkGacha, PunkGachaInterface } from "../PunkGacha";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "cryptopunks",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint200",
        name: "roundId",
        type: "uint200",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "amount",
        type: "uint96",
      },
    ],
    name: "PlayerBet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint200",
        name: "roundId",
        type: "uint200",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "amount",
        type: "uint96",
      },
    ],
    name: "PlayerRefund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint200",
        name: "roundId",
        type: "uint200",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "punkIndex",
        type: "uint16",
      },
    ],
    name: "RoundClose",
    type: "event",
  },
  {
    inputs: [],
    name: "bet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "chips",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "amount",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chipsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRound",
    outputs: [
      {
        internalType: "uint256",
        name: "minValue",
        type: "uint256",
      },
      {
        internalType: "uint200",
        name: "id",
        type: "uint200",
      },
      {
        internalType: "uint16",
        name: "punkIndex",
        type: "uint16",
      },
      {
        internalType: "enum PunkGacha.RoundStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumPunkValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumBetValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_punkIndex",
        type: "uint256",
      },
    ],
    name: "nextRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "chipIndexes",
        type: "uint256[]",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "segments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "segmentsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeThousandth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isPaused",
        type: "bool",
      },
    ],
    name: "setIsPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    name: "setKeyHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumPunkValue",
        type: "uint256",
      },
    ],
    name: "setMaximumPunkValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumBetValue",
        type: "uint256",
      },
    ],
    name: "setMinimumBetValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_serviceFeeThousandth",
        type: "uint256",
      },
    ],
    name: "setServiceFeeThousandth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260646001819055662386f26fc10000600255680ad78ebc5ac62000006003556004805460ff19169055600955600a80556010805461ffff60a01b191661027160a41b1790553480156200005657600080fd5b5060405162002779380380620027798339810160408190526200007991620001ff565b84846200008633620000ee565b6001600160a01b0391821660a05216608052620000a3836200013e565b620000ae8262000192565b601080546001600160a01b0319166001600160a01b038316179055601480546002919060ff60d81b1916600160d81b83021790555050505050506200025d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200018d5760405162461bcd60e51b815260206004820181905260248201526000805160206200275983398151915260448201526064015b60405180910390fd5b600555565b6000546001600160a01b03163314620001dd5760405162461bcd60e51b8152602060048201819052602482015260008051602062002759833981519152604482015260640162000184565b600655565b80516001600160a01b0381168114620001fa57600080fd5b919050565b600080600080600060a086880312156200021857600080fd5b6200022386620001e2565b94506200023360208701620001e2565b935060408601519250606086015191506200025160808701620001e2565b90509295509295909350565b60805160a0516124ba6200029f600039600081816116df0152611b40015260008181610d950152818161135b0152818161159c0152611b1101526124ba6000f3fe6080604052600436106101b75760003560e01c80636e04ff0d116100ec578063985447101161008a578063b187bd2611610064578063b187bd2614610503578063b61a10141461052d578063cb892c7114610543578063f2fde38b1461055957600080fd5b806398544710146104a35780639e9273e1146104c3578063aa613df5146104e357600080fd5b80638a19c8bc116100c65780638a19c8bc146103fa5780638da5cb5b146104465780638dc654a21461046e57806394985ddd1461048357600080fd5b80636e04ff0d146103a1578063715018a6146103cf5780637c4b30bc146103e457600080fd5b80633ccfd60b116101595780634585e33b116101335780634585e33b146103365780635d5ae2451461035657806369fe0e2d1461036c5780636bdebcc91461038c57600080fd5b80633ccfd60b1461029c57806340d96050146102b157806341a830f81461032057600080fd5b8063213eb00111610195578063213eb0011461020f578063240976bf1461022f57806324f992951461024f578063315606261461026f57600080fd5b806311610c25146101bc578063120bd8f5146101c65780631a39d8ef146101e6575b600080fd5b6101c4610579565b005b3480156101d257600080fd5b506101c46101e136600461200c565b6106d1565b3480156101f257600080fd5b506101fc600d5481565b6040519081526020015b60405180910390f35b34801561021b57600080fd5b506101c461022a36600461200c565b610700565b34801561023b57600080fd5b506101c461024a366004612033565b610aa1565b34801561025b57600080fd5b506101c461026a36600461200c565b610ade565b34801561027b57600080fd5b506101fc61028a36600461200c565b60076020526000908152604090205481565b3480156102a857600080fd5b506101c4610b0d565b3480156102bd57600080fd5b506102f96102cc36600461200c565b600b602052600090815260409020546001600160a01b03811690600160a01b90046001600160601b031682565b604080516001600160a01b0390931683526001600160601b03909116602083015201610206565b34801561032c57600080fd5b506101fc600c5481565b34801561034257600080fd5b506101c4610351366004612057565b610bd7565b34801561036257600080fd5b506101fc60025481565b34801561037857600080fd5b506101c461038736600461200c565b611117565b34801561039857600080fd5b506101c4611146565b3480156103ad57600080fd5b506103c16103bc366004612057565b61117e565b604051610206929190612116565b3480156103db57600080fd5b506101c4611529565b3480156103f057600080fd5b506101fc60015481565b34801561040657600080fd5b5060135460145461043691906001600160c81b03811690600160c81b810461ffff1690600160d81b900460ff1684565b6040516102069493929190612147565b34801561045257600080fd5b506000546040516001600160a01b039091168152602001610206565b34801561047a57600080fd5b506101c461155d565b34801561048f57600080fd5b506101c461049e366004612194565b6116d4565b3480156104af57600080fd5b506101c46104be36600461200c565b611756565b3480156104cf57600080fd5b506101c46104de36600461200c565b611785565b3480156104ef57600080fd5b506101c46104fe3660046121b6565b6117b4565b34801561050f57600080fd5b5060045461051d9060ff1681565b6040519015158152602001610206565b34801561053957600080fd5b506101fc60035481565b34801561054f57600080fd5b506101fc60085481565b34801561056557600080fd5b506101c461057436600461222e565b6118f1565b6000601454600160d81b900460ff16600281111561059957610599612131565b146105dc5760405162461bcd60e51b815260206004820152600e60248201526d3937bab732103737ba1037b832b760911b60448201526064015b60405180910390fd5b60025434101561061d5760405162461bcd60e51b815260206004820152600c60248201526b62657420746f6f206c65737360a01b60448201526064016105d3565b600160601b341061065f5760405162461bcd60e51b815260206004820152600c60248201526b0c4cae840e8dede40daeac6d60a31b60448201526064016105d3565b6014546040516001600160601b033416815233916001600160c81b0316907f5259452d10b9bda5931e4f972076d3d5de307e4badf3a04c602f9dde9fd6ba219060200160405180910390a3604080518082019091523381526001600160601b03341660208201526106cf9061198c565b565b6000546001600160a01b031633146106fb5760405162461bcd60e51b81526004016105d39061224b565b600255565b60045460ff161561073f5760405162461bcd60e51b81526020600482015260096024820152681a5cc81c185d5cd95960ba1b60448201526064016105d3565b6002601454600160d81b900460ff16600281111561075f5761075f612131565b1461079e5760405162461bcd60e51b815260206004820152600f60248201526e726f756e64206e6f7420636c6f736560881b60448201526064016105d3565b601054600160a01b900461ffff1681106107ef5760405162461bcd60e51b81526020600482015260126024820152710d2dcecc2d8d2c840e0eadcd640d2dcc8caf60731b60448201526064016105d3565b6000546001600160a01b03163314806108855750601054604051630b02f02d60e31b8152600481018390526001600160a01b0390911690635817816890602401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190612280565b6001600160a01b0316336001600160a01b0316145b6108c15760405162461bcd60e51b815260206004820152600d60248201526c3737903832b936b4b9b9b4b7b760991b60448201526064016105d3565b60105460405163088f11f360e01b815260048101839052600091829182916001600160a01b03169063088f11f39060240160a060405180830381865afa15801561090f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610933919061229d565b945094505050925082801561096157506001600160a01b038116158061096157506001600160a01b03811630145b6109a15760405162461bcd60e51b815260206004820152601160248201527070756e6b206e6f7420666f722073616c6560781b60448201526064016105d3565b6003548211156109e85760405162461bcd60e51b815260206004820152601260248201527170756e6b20746f6f20657870656e7369766560701b60448201526064016105d3565b60408051608081019091528281526014546020820190610a12906001600160c81b03166001612314565b6001600160c81b0316815261ffff861660208201526040016000905280516013908155602082015160148054604085015161ffff16600160c81b026001600160d81b03199091166001600160c81b0390931692909217919091178082556060840151919060ff60d81b1916600160d81b836002811115610a9457610a94612131565b0217905550505050505050565b6000546001600160a01b03163314610acb5760405162461bcd60e51b81526004016105d39061224b565b6004805460ff1916911515919091179055565b6000546001600160a01b03163314610b085760405162461bcd60e51b81526004016105d39061224b565b600155565b6000546001600160a01b03163314610b375760405162461bcd60e51b81526004016105d39061224b565b6002601454600160d81b900460ff166002811115610b5757610b57612131565b14610b965760405162461bcd60e51b815260206004820152600f60248201526e726f756e64206e6f7420636c6f736560881b60448201526064016105d3565b600080546011546040516001600160a01b039092169283926108fc8315029291818181858888f19350505050158015610bd3573d6000803e3d6000fd5b5050565b6000601454600160d81b900460ff166002811115610bf757610bf7612131565b1415610f0d57610c076000611a1e565b15610c1457610bd3611a52565b60105460145460405163088f11f360e01b8152600160c81b90910461ffff166004820152600091829182916001600160a01b03169063088f11f39060240160a060405180830381865afa158015610c6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c93919061229d565b9450945050509250601360000154821180610cac575082155b80610cd357506001600160a01b03811615801590610cd357506001600160a01b0381163014155b15610d4757601454604051600160c81b820461ffff1681526000916001600160c81b0316907f909e2440fe42c77fdda1e14338c04baaae708d2aa71a101b1bb04858a985495d9060200160405180910390a3601480546002919060ff60d81b1916600160d81b835b02179055505050505050565b6103e86001546103e8610d5a919061233f565b601354610d679190612357565b610d71919061238c565b600d5410158015610e0b57506006546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0891906123a0565b10155b15610ecc5760105460145460405163104c9fd360e31b8152600160c81b90910461ffff1660048201526001600160a01b0390911690638264fe989084906024016000604051808303818588803b158015610e6457600080fd5b505af1158015610e78573d6000803e3d6000fd5b505050505081600d54610e8b91906123b9565b60116000828254610e9c919061233f565b92505081905550610eb1600554600654611b0d565b50601480546001919060ff60d81b1916600160d81b83610d3b565b60405162461bcd60e51b81526020600482015260166024820152750dcdee840cadcdeeaced04098929c9640dee4408aa8960531b60448201526064016105d3565b6001601454600160d81b900460ff166002811115610f2d57610f2d612131565b14156110de57601254610f825760405162461bcd60e51b815260206004820152601860248201527f72616e646f6d6e657373206e6f742066756c66696c6c6564000000000000000060448201526064016105d3565b6000610f8f601254611c91565b600060125590506001600160a01b038116610fe15760405162461bcd60e51b815260206004820152601260248201527131b0b73737ba103834b1b5903bb4b73732b960711b60448201526064016105d3565b60105460145460405163bf31196f60e01b8152600160c81b90910461ffff166004820152600060248201526001600160a01b0383811660448301529091169063bf31196f90606401600060405180830381600087803b15801561104357600080fd5b505af1158015611057573d6000803e3d6000fd5b5050601454604051600160c81b820461ffff1681526001600160a01b03851693506001600160c81b0390911691507f909e2440fe42c77fdda1e14338c04baaae708d2aa71a101b1bb04858a985495d9060200160405180910390a350506014805460ff60d81b1916600160d91b179055506000600c8190556008819055600e819055600d55565b60405162461bcd60e51b815260206004820152600e60248201526d756e6b6e6f776e2073746174757360901b60448201526064016105d3565b6000546001600160a01b031633146111415760405162461bcd60e51b81526004016105d39061224b565b600655565b6000546001600160a01b031633146111705760405162461bcd60e51b81526004016105d39061224b565b6000546001600160a01b0316ff5b6000606081601454600160d81b900460ff1660028111156111a1576111a1612131565b141561146c576111b16000611a1e565b156111fe576001848481818080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250959750919550611522945050505050565b60105460145460405163088f11f360e01b8152600160c81b90910461ffff166004820152600091829182916001600160a01b03169063088f11f39060240160a060405180830381865afa158015611259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127d919061229d565b9450945050509250601360000154821180611296575082155b806112bd57506001600160a01b038116158015906112bd57506001600160a01b0381163014155b1561130d576001878781818080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250959a50919850611522975050505050505050565b6103e86001546103e8611320919061233f565b60135461132d9190612357565b611337919061238c565b600d54101580156113d157506006546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156113aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ce91906123a0565b10155b15611421576001878781818080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250959a50919850611522975050505050505050565b6000878781818080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250959a50919850611522975050505050505050565b6001601454600160d81b900460ff16600281111561148c5761148c612131565b14156114df5760125460001415848481818080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250959750919550611522945050505050565b6000848481818080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525095975091955050505050505b9250929050565b6000546001600160a01b031633146115535760405162461bcd60e51b81526004016105d39061224b565b6106cf6000611dd4565b6000546001600160a01b031633146115875760405162461bcd60e51b81526004016105d39061224b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90339083906370a0823190602401602060405180830381865afa1580156115f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161991906123a0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168891906123d0565b6106cf5760405162461bcd60e51b815260206004820152601760248201527f756e61626c6520746f207769746864726177204c494e4b00000000000000000060448201526064016105d3565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461174c5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016105d3565b610bd38282611e24565b6000546001600160a01b031633146117805760405162461bcd60e51b81526004016105d39061224b565b600555565b6000546001600160a01b031633146117af5760405162461bcd60e51b81526004016105d39061224b565b600355565b6001601454600160d81b900460ff1660028111156117d4576117d4612131565b14156118155760405162461bcd60e51b815260206004820152601060248201526f726f756e642069732064726177696e6760801b60448201526064016105d3565b336000611823828585611e8b565b9050600081116118695760405162461bcd60e51b81526020600482015260116024820152701b9bdd1a1a5b99c81d1bc81c99599d5b99607a1b60448201526064016105d3565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561189f573d6000803e3d6000fd5b506014546040516001600160601b038316815233916001600160c81b0316907f1204ec66fdd9c5d3701fc74849b4c92c59a369fa843d38e56b0ddd5a72eaa1c89060200160405180910390a350505050565b6000546001600160a01b0316331461191b5760405162461bcd60e51b81526004016105d39061224b565b6001600160a01b0381166119805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d3565b61198981611dd4565b50565b611997600a54611a1e565b156119a4576119a4611a52565b600c80546000908152600b6020908152604082208451918501516001600160601b0316600160a01b026001600160a01b03909216919091179055815460019291906119f090849061233f565b9250508190555080602001516001600160601b0316600d6000828254611a16919061233f565b909155505050565b600081600c54118015611a4c575060085460095483600c54611a4091906123b9565b611a4a919061238c565b115b92915050565b600080600954600954600c54611a68919061238c565b611a729190612357565b90505b600c54811015611abc576000818152600b6020526040902054611aa890600160a01b90046001600160601b03168361233f565b915080611ab4816123ed565b915050611a75565b5080600e54600d54611ace91906123b9565b611ad891906123b9565b60088054600090815260076020526040812092909255805460019290611aff90849061233f565b9091555050600d54600e5550565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611b7d929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611baa93929190612408565b6020604051808303816000875af1158015611bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bed91906123d0565b506000838152600f6020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a090910190925281519183019190912093879052919052611c4990600161233f565b6000858152600f6020526040902055611c898482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b600d5460009081908190611ca59085612438565b905060005b600854811015611d07576000818152600760205260409020548290611ccf908561233f565b1115611cda57611d07565b600081815260076020526040902054611cf3908461233f565b925080611cff816123ed565b915050611caa565b600060095482611d179190612357565b90505b600954611d2883600161233f565b611d329190612357565b811015611dc8576000818152600b60205260409020548390611d6490600160a01b90046001600160601b03168661233f565b1115611d8b576000908152600b60205260409020546001600160a01b031695945050505050565b6000818152600b6020526040902054611db490600160a01b90046001600160601b03168561233f565b935080611dc0816123ed565b915050611d1a565b50600095945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001601454600160d81b900460ff166002811115611e4457611e44612131565b14611e855760405162461bcd60e51b8152602060048201526011602482015270726f756e64206e6f742064726177696e6760781b60448201526064016105d3565b60125550565b60008080805b84811015611fb7576000868683818110611ead57611ead61244c565b602090810292909201356000818152600b909352604090922054919250506001600160a01b0389811691161415611fa4576000818152600b6020526040902054611f0790600160a01b90046001600160601b031685612462565b9350600060095482611f19919061238c565b9050600854811015611f93576000828152600b6020908152604080832054848452600790925282208054600160a01b9092046001600160601b0316929091611f629084906123b9565b90915550506000828152600b6020526040902054611f9090600160a01b90046001600160601b031685612462565b93505b506000818152600b60205260408120555b5080611faf816123ed565b915050611e91565b50816001600160801b0316600d6000828254611fd391906123b9565b92505081905550806001600160801b0316600e6000828254611ff591906123b9565b9091555050506001600160801b0316949350505050565b60006020828403121561201e57600080fd5b5035919050565b801515811461198957600080fd5b60006020828403121561204557600080fd5b813561205081612025565b9392505050565b6000806020838503121561206a57600080fd5b823567ffffffffffffffff8082111561208257600080fd5b818501915085601f83011261209657600080fd5b8135818111156120a557600080fd5b8660208285010111156120b757600080fd5b60209290920196919550909350505050565b6000815180845260005b818110156120ef576020818501810151868301820152016120d3565b81811115612101576000602083870101525b50601f01601f19169290920160200192915050565b8215158152604060208201526000611c8960408301846120c9565b634e487b7160e01b600052602160045260246000fd5b8481526001600160c81b038416602082015261ffff83166040820152608081016003831061218557634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b600080604083850312156121a757600080fd5b50508035926020909101359150565b600080602083850312156121c957600080fd5b823567ffffffffffffffff808211156121e157600080fd5b818501915085601f8301126121f557600080fd5b81358181111561220457600080fd5b8660208260051b85010111156120b757600080fd5b6001600160a01b038116811461198957600080fd5b60006020828403121561224057600080fd5b813561205081612219565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561229257600080fd5b815161205081612219565b600080600080600060a086880312156122b557600080fd5b85516122c081612025565b6020870151604088015191965094506122d881612219565b6060870151608088015191945092506122f081612219565b809150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b60006001600160c81b03828116848216808303821115612336576123366122fe565b01949350505050565b60008219821115612352576123526122fe565b500190565b6000816000190483118215151615612371576123716122fe565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261239b5761239b612376565b500490565b6000602082840312156123b257600080fd5b5051919050565b6000828210156123cb576123cb6122fe565b500390565b6000602082840312156123e257600080fd5b815161205081612025565b6000600019821415612401576124016122fe565b5060010190565b60018060a01b038416815282602082015260606040820152600061242f60608301846120c9565b95945050505050565b60008261244757612447612376565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160801b03808316818516808303821115612336576123366122fe56fea264697066735822122083d35a4271eabe9b76c16a464f5ef231405adc2ab48521b0a87b0c3db04c46fe64736f6c634300080a00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

type PunkGachaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PunkGachaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PunkGacha__factory extends ContractFactory {
  constructor(...args: PunkGachaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    vrfCoordinator: string,
    link: string,
    keyHash: BytesLike,
    fee: BigNumberish,
    cryptopunks: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PunkGacha> {
    return super.deploy(
      vrfCoordinator,
      link,
      keyHash,
      fee,
      cryptopunks,
      overrides || {}
    ) as Promise<PunkGacha>;
  }
  getDeployTransaction(
    vrfCoordinator: string,
    link: string,
    keyHash: BytesLike,
    fee: BigNumberish,
    cryptopunks: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vrfCoordinator,
      link,
      keyHash,
      fee,
      cryptopunks,
      overrides || {}
    );
  }
  attach(address: string): PunkGacha {
    return super.attach(address) as PunkGacha;
  }
  connect(signer: Signer): PunkGacha__factory {
    return super.connect(signer) as PunkGacha__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PunkGachaInterface {
    return new utils.Interface(_abi) as PunkGachaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PunkGacha {
    return new Contract(address, _abi, signerOrProvider) as PunkGacha;
  }
}
